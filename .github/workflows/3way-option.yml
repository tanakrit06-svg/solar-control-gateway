name: SOC Monitor with Mode Switching
on:
  repository_dispatch:
    types: [log_event]

jobs:
  handle_soc:
    runs-on: ubuntu-latest
    steps:
      # ‚úÖ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      # üìñ ‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
      - name: ‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        id: read_state
        run: |
          if [ -f solar_state.txt ]; then
            MODE=$(grep '^mode=' solar_state.txt | cut -d '=' -f2)
            SOLAR_ON_SENT=$(grep '^solar_on_sent=' solar_state.txt | cut -d '=' -f2)
            SOLAR_OFF_SENT=$(grep '^solar_off_sent=' solar_state.txt | cut -d '=' -f2)
          else
            MODE="normal"
            SOLAR_ON_SENT="false"
            SOLAR_OFF_SENT="false"
          fi
          
          echo "mode=$MODE" >> $GITHUB_OUTPUT
          echo "solar_on_sent=$SOLAR_ON_SENT" >> $GITHUB_OUTPUT
          echo "solar_off_sent=$SOLAR_OFF_SENT" >> $GITHUB_OUTPUT
          echo "üìä Current State: mode=$MODE, solar_on_sent=$SOLAR_ON_SENT, solar_off_sent=$SOLAR_OFF_SENT"

      # üîÑ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Mode
      - name: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Mode
        id: check_mode
        run: |
          SOC=${{ github.event.client_payload.soc }}
          CURRENT_MODE=${{ steps.read_state.outputs.mode }}
          NEW_MODE=$CURRENT_MODE
          EVENT_TEXT=""
          SEND_SOLAR_ON="false"
          SEND_SOLAR_OFF="false"
          
          echo "üîç Processing: SOC=$SOC, Current Mode=$CURRENT_MODE"
          
          # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Mode
          if [ "$CURRENT_MODE" = "normal" ]; then
            if [ $SOC -le 25 ]; then
              NEW_MODE="low_batt"
              EVENT_TEXT="Low_Batt"
              SEND_SOLAR_OFF="true"
              echo "üî¥ Mode Change: Normal ‚Üí Low Batt (SOC=$SOC ‚â§ 25)"
            else
              EVENT_TEXT="Normal_Batt"
              echo "üü¢ Stay in Normal Mode (SOC=$SOC > 25)"
            fi
          elif [ "$CURRENT_MODE" = "low_batt" ]; then
            if [ $SOC -ge 35 ]; then
              NEW_MODE="normal"
              EVENT_TEXT="Normal_Batt"
              SEND_SOLAR_ON="true"
              echo "üü¢ Mode Change: Low Batt ‚Üí Normal (SOC=$SOC ‚â• 35)"
            else
              EVENT_TEXT="Low_Batt"
              echo "üî¥ Stay in Low Batt Mode (SOC=$SOC < 35)"
            fi
          fi
          
          echo "mode=$NEW_MODE" >> $GITHUB_OUTPUT
          echo "event_text=$EVENT_TEXT" >> $GITHUB_OUTPUT
          echo "send_solar_on=$SEND_SOLAR_ON" >> $GITHUB_OUTPUT
          echo "send_solar_off=$SEND_SOLAR_OFF" >> $GITHUB_OUTPUT
          echo "üìã Decision: mode=$NEW_MODE, event=$EVENT_TEXT, solar_on=$SEND_SOLAR_ON, solar_off=$SEND_SOLAR_OFF"

      # üìù ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Sheet 1 (‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á)
      - name: ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Sheet 1 (Log)
        run: |
          SOC=${{ github.event.client_payload.soc }}
          EVENT="${{ steps.check_mode.outputs.event_text }}"
          
          curl -X POST https://docs.google.com/forms/d/e/1FAIpQLSdrDVFEEkkdZ6k4rdG4OCkTWoek9GBk1Uip-GWWDZR8HCsXkQ/formResponse \
            -d "entry.747932621=$SOC" \
            -d "entry.1561980421=$EVENT" \
            --fail --silent --show-error
          
          echo "‚úÖ Sheet 1 Log sent: soc=$SOC, event=$EVENT"

      # ‚òÄÔ∏è ‡∏™‡πà‡∏á solar_on ‡πÑ‡∏õ Sheet 2 (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á)
      - name: ‡∏™‡πà‡∏á solar_on ‡πÑ‡∏õ Sheet 2
        if: steps.check_mode.outputs.send_solar_on == 'true' && steps.read_state.outputs.solar_on_sent == 'false'
        run: |
          curl -X POST https://docs.google.com/forms/d/e/1FAIpQLSchglVNdUfC_titEV191XeR_uH9NnVYyMMmtuoZmgM0oH3yVg/formResponse \
            -d "entry.29631913=solar_on" \
            --fail --silent --show-error
          
          echo "‚úÖ Sheet 2: solar_on sent"

      # üåë ‡∏™‡πà‡∏á solar_off ‡πÑ‡∏õ Sheet 3 (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á)
      - name: ‡∏™‡πà‡∏á solar_off ‡πÑ‡∏õ Sheet 3
        if: steps.check_mode.outputs.send_solar_off == 'true' && steps.read_state.outputs.solar_off_sent == 'false'
        run: |
          curl -X POST https://docs.google.com/forms/d/e/1FAIpQLSfR4GihZk5nhFnJndejNVNji_5Mywbg3PIgZi3m3ZjQxGApQQ/formResponse \
            -d "entry.1012650439=solar_off" \
            --fail --silent --show-error
          
          echo "‚úÖ Sheet 3: solar_off sent"

      # üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà
      - name: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà
        run: |
          NEW_MODE=${{ steps.check_mode.outputs.mode }}
          SEND_SOLAR_ON=${{ steps.check_mode.outputs.send_solar_on }}
          SEND_SOLAR_OFF=${{ steps.check_mode.outputs.send_solar_off }}
          
          # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ sent flags
          if [ "$SEND_SOLAR_ON" = "true" ]; then
            SOLAR_ON_SENT="true"
            SOLAR_OFF_SENT="false"
          elif [ "$SEND_SOLAR_OFF" = "true" ]; then
            SOLAR_ON_SENT="false"
            SOLAR_OFF_SENT="true"
          else
            SOLAR_ON_SENT=${{ steps.read_state.outputs.solar_on_sent }}
            SOLAR_OFF_SENT=${{ steps.read_state.outputs.solar_off_sent }}
          fi
          
          # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå state
          echo "mode=$NEW_MODE" > solar_state.txt
          echo "solar_on_sent=$SOLAR_ON_SENT" >> solar_state.txt
          echo "solar_off_sent=$SOLAR_OFF_SENT" >> solar_state.txt
          
          echo "üíæ State saved: mode=$NEW_MODE, solar_on_sent=$SOLAR_ON_SENT, solar_off_sent=$SOLAR_OFF_SENT"

      # üì§ Commit ‡πÅ‡∏•‡∏∞ Push
      - name: Commit state changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add solar_state.txt
          git diff --quiet && git diff --staged --quiet || git commit -m "Update state: mode=${{ steps.check_mode.outputs.mode }}, SOC=${{ github.event.client_payload.soc }}"
          git remote set-url origin https://${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
          git push
          
          echo "‚úÖ State committed and pushed"
