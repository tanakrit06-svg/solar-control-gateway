name: 3way-option
on:
  repository_dispatch:
    types: [log_event]

jobs:
  handle_soc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: อ่านสถานะปัจจุบัน
        id: read_state
        run: |
          if [ -f solar_state.txt ]; then
            MODE=$(grep '^mode=' solar_state.txt | cut -d '=' -f2 || echo "normal")
            SOLAR_ON_SENT=$(grep '^solar_on_sent=' solar_state.txt | cut -d '=' -f2 || echo "false")
            SOLAR_OFF_SENT=$(grep '^solar_off_sent=' solar_state.txt | cut -d '=' -f2 || echo "false")
            LAST_SOC=$(grep '^last_soc=' solar_state.txt | cut -d '=' -f2 || echo "")
          else
            MODE="normal"
            SOLAR_ON_SENT="false"
            SOLAR_OFF_SENT="false"
            LAST_SOC=""
          fi

          MODE=${MODE:-normal}
          SOLAR_ON_SENT=${SOLAR_ON_SENT:-false}
          SOLAR_OFF_SENT=${SOLAR_OFF_SENT:-false}

          echo "mode=$MODE" >> $GITHUB_OUTPUT
          echo "solar_on_sent=$SOLAR_ON_SENT" >> $GITHUB_OUTPUT
          echo "solar_off_sent=$SOLAR_OFF_SENT" >> $GITHUB_OUTPUT
          echo "last_soc=$LAST_SOC" >> $GITHUB_OUTPUT
          echo "Current State: mode=$MODE, solar_on_sent=$SOLAR_ON_SENT, solar_off_sent=$SOLAR_OFF_SENT, last_soc=$LAST_SOC"

      - name: ตรวจสอบและเปลี่ยน Mode
        id: check_mode
        env:
          SOC: ${{ github.event.client_payload.soc }}
          CURRENT_MODE: ${{ steps.read_state.outputs.mode }}
          SOLAR_ON_SENT: ${{ steps.read_state.outputs.solar_on_sent }}
          SOLAR_OFF_SENT: ${{ steps.read_state.outputs.solar_off_sent }}
          LAST_SOC: ${{ steps.read_state.outputs.last_soc }}
        run: |
          CURRENT_MODE=${CURRENT_MODE:-normal}
          NEW_MODE=$CURRENT_MODE
          EVENT_TEXT=""
          SEND_SOLAR_ON="false"
          SEND_SOLAR_OFF="false"
          SKIP_SHEET1="false"

          echo "=== DEBUG START ==="
          echo "SOC received: $SOC"
          echo "CURRENT_MODE: $CURRENT_MODE"
          echo "SOLAR_ON_SENT: $SOLAR_ON_SENT"
          echo "LAST_SOC: $LAST_SOC"
          echo "=== DEBUG END ==="

          if [ "$SOC" = "$LAST_SOC" ]; then
            echo "SOC ($SOC) is same as last sent ($LAST_SOC) → skip Sheet 1"
            SKIP_SHEET1="true"
          fi

          if [ "$CURRENT_MODE" = "normal" ]; then
            if [ $SOC -le 25 ]; then
              NEW_MODE="low_batt"
              EVENT_TEXT="Low_Batt"
              SEND_SOLAR_OFF="true"
            else
              EVENT_TEXT="Normal_Batt"
              if [ "$SOLAR_ON_SENT" = "false" ] && [ $SOC -ge 35 ]; then
                SEND_SOLAR_ON="true"
              fi
            fi
          elif [ "$CURRENT_MODE" = "low_batt" ]; then
            if [ $SOC -ge 35 ]; then
              NEW_MODE="normal"
              EVENT_TEXT="Normal_Batt"
              SEND_SOLAR_ON="true"
            else
              EVENT_TEXT="Low_Batt"
            fi
          else
            NEW_MODE="normal"
            EVENT_TEXT="Normal_Batt"
          fi

          echo "mode=$NEW_MODE" >> $GITHUB_OUTPUT
          echo "event_text=$EVENT_TEXT" >> $GITHUB_OUTPUT
          echo "send_solar_on=$SEND_SOLAR_ON" >> $GITHUB_OUTPUT
          echo "send_solar_off=$SEND_SOLAR_OFF" >> $GITHUB_OUTPUT
          echo "skip_sheet1=$SKIP_SHEET1" >> $GITHUB_OUTPUT

      - name: ส่งข้อมูลไป Sheet 1
        if: steps.check_mode.outputs.skip_sheet1 != 'true'
        env:
          SOC: ${{ github.event.client_payload.soc }}
          EVENT: ${{ steps.check_mode.outputs.event_text }}
        run: |
          echo "Sending to Sheet 1: SOC=$SOC, EVENT=$EVENT"
          curl -X POST "https://docs.google.com/forms/d/e/1FAIpQLSdrDVFEEkkdZ6k4rdG4OCkTWoek9GBk1Uip-GWWDZR8HCsXkQ/formResponse" \
            -d "entry.747932621=$SOC" \
            -d "entry.1561980421=$EVENT" \
            --fail --silent --show-error
          echo "Sheet 1 sent: soc=$SOC, event=$EVENT"

      - name: ส่ง solar_on ไป Sheet 2
        if: steps.check_mode.outputs.send_solar_on == 'true' && steps.read_state.outputs.solar_on_sent == 'false'
        run: |
          echo "Sending solar_on to Sheet 2"
          curl -X POST "https://docs.google.com/forms/d/e/1FAIpQLSchglVNdUfC_titEV191XeR_uH9NnVYyMMmtuoZmgM0oH3yVg/formResponse" \
            -d "entry.29631913=solar_on" \
            --fail --silent --show-error
          echo "Sheet 2: solar_on sent"

      - name: ส่ง solar_off ไป Sheet 3
        if: steps.check_mode.outputs.send_solar_off == 'true' && steps.read_state.outputs.solar_off_sent == 'false'
        run: |
          echo "Sending solar_off to Sheet 3"
          curl -X POST "https://docs.google.com/forms/d/e/1FAIpQLSfR4GihZk5nhFnJndejNVNji_5Mywbg3PIgZi3m3ZjQxGApQQ/formResponse" \
            -d "entry.1012650439=solar_off" \
            --fail --silent --show-error
          echo "Sheet 3: solar_off sent"

      - name: บันทึกสถานะใหม่
        env:
          NEW_MODE: ${{ steps.check_mode.outputs.mode }}
          SEND_SOLAR_ON: ${{ steps.check_mode.outputs.send_solar_on }}
          SEND_SOLAR_OFF: ${{ steps.check_mode.outputs.send_solar_off }}
          SOLAR_ON_SENT_OLD: ${{ steps.read_state.outputs.solar_on_sent }}
          SOLAR_OFF_SENT_OLD: ${{ steps.read_state.outputs.solar_off_sent }}
          SOC: ${{ github.event.client_payload.soc }}
        run: |
          if [ "$SEND_SOLAR_ON" = "true" ]; then
            SOLAR_ON_SENT="true"
            SOLAR_OFF_SENT="false"
          elif [ "$SEND_SOLAR_OFF" = "true" ]; then
            SOLAR_ON_SENT="false"
            SOLAR_OFF_SENT="true"
          else
            SOLAR_ON_SENT="$SOLAR_ON_SENT_OLD"
            SOLAR_OFF_SENT="$SOLAR_OFF_SENT_OLD"
          fi

          echo "mode=$NEW_MODE" > solar_state.txt
          echo "solar_on_sent=$SOLAR_ON_SENT" >> solar_state.txt
          echo "solar_off_sent=$SOLAR_OFF_SENT" >> solar_state.txt
          echo "last_soc=$SOC" >> solar_state.txt
          echo "State saved: mode=$NEW_MODE, solar_on_sent=$SOLAR_ON_SENT, solar_off_sent=$SOLAR_OFF_SENT, last_soc=$SOC"

      - name: Commit state changes
        env:
          SOC: ${{ github.event.client_payload.soc }}
          MODE: ${{ steps.check_mode.outputs.mode }}
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add solar_state.txt
          git diff --quiet && git diff --staged --quiet || git commit -m "Update state: mode=$MODE, SOC=$SOC"
          git remote set-url origin https://${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
          git push
          echo "State committed and pushed"
