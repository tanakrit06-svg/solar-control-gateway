name: 3way-option

on:
  repository_dispatch:
    types: [log_event]

jobs:
  handle_soc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: ‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
        id: read_state
        env:
          SOC: ${{ github.event.client_payload.soc }}
        run: |
          echo "üì• ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ SOC: $SOC"

          INIT_REQUIRED="false"
          SOC_CHANGED="true"

          if [ -z "$SOC" ]; then
            echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡πà‡∏≤ SOC ‚Üí ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"
            exit 1
          fi

          if [ ! -f solar_state.txt ] || [ ! -s solar_state.txt ]; then
            echo "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå ‚Üí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà"

            if [ "$SOC" -le 25 ]; then
              MODE="low_batt"
              EVER_LOW_BATT="true"
            else
              MODE="normal"
              EVER_LOW_BATT="false"
            fi

            echo "mode=$MODE" > solar_state.txt
            echo "solar_on_sent=false" >> solar_state.txt
            echo "solar_off_sent=false" >> solar_state.txt
            echo "last_soc=$SOC" >> solar_state.txt
            echo "ever_low_batt=$EVER_LOW_BATT" >> solar_state.txt
            INIT_REQUIRED="true"
          fi

          MODE=$(grep '^mode=' solar_state.txt | cut -d '=' -f2 || echo "normal")
          SOLAR_ON_SENT=$(grep '^solar_on_sent=' solar_state.txt | cut -d '=' -f2 || echo "false")
          SOLAR_OFF_SENT=$(grep '^solar_off_sent=' solar_state.txt | cut -d '=' -f2 || echo "false")
          LAST_SOC=$(grep '^last_soc=' solar_state.txt | cut -d '=' -f2 || echo "")
          EVER_LOW_BATT=$(grep '^ever_low_batt=' solar_state.txt | cut -d '=' -f2 || echo "false")

          if [ "$SOC" = "$LAST_SOC" ]; then
            SOC_CHANGED="false"
          fi

          echo "mode=$MODE" >> $GITHUB_OUTPUT
          echo "solar_on_sent=$SOLAR_ON_SENT" >> $GITHUB_OUTPUT
          echo "solar_off_sent=$SOLAR_OFF_SENT" >> $GITHUB_OUTPUT
          echo "last_soc=$LAST_SOC" >> $GITHUB_OUTPUT
          echo "ever_low_batt=$EVER_LOW_BATT" >> $GITHUB_OUTPUT
          echo "init_required=$INIT_REQUIRED" >> $GITHUB_OUTPUT
          echo "soc_changed=$SOC_CHANGED" >> $GITHUB_OUTPUT

      - name: ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        id: check_mode
        env:
          SOC: ${{ github.event.client_payload.soc }}
          CURRENT_MODE: ${{ steps.read_state.outputs.mode }}
          SOLAR_ON_SENT: ${{ steps.read_state.outputs.solar_on_sent }}
          SOLAR_OFF_SENT: ${{ steps.read_state.outputs.solar_off_sent }}
          EVER_LOW_BATT: ${{ steps.read_state.outputs.ever_low_batt }}
          INIT_REQUIRED: ${{ steps.read_state.outputs.init_required }}
          SOC_CHANGED: ${{ steps.read_state.outputs.soc_changed }}
        run: |
          if [ "$INIT_REQUIRED" = "true" ]; then
            echo "skip_sheet1=false" >> $GITHUB_OUTPUT
            echo "send_solar_on=false" >> $GITHUB_OUTPUT
            echo "send_solar_off=false" >> $GITHUB_OUTPUT
            echo "event_text=Init" >> $GITHUB_OUTPUT
            echo "mode=$CURRENT_MODE" >> $GITHUB_OUTPUT
            echo "ever_low_batt=$EVER_LOW_BATT" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ "$SOC_CHANGED" != "true" ]; then
            echo "‚úÖ SOC ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô ‚Üí ‡∏Ç‡πâ‡∏≤‡∏°"
            echo "skip_sheet1=true" >> $GITHUB_OUTPUT
            echo "send_solar_on=false" >> $GITHUB_OUTPUT
            echo "send_solar_off=false" >> $GITHUB_OUTPUT
            echo "event_text=No_Change" >> $GITHUB_OUTPUT
            echo "mode=$CURRENT_MODE" >> $GITHUB_OUTPUT
            echo "ever_low_batt=$EVER_LOW_BATT" >> $GITHUB_OUTPUT
            exit 0
          fi

          NEW_MODE=$CURRENT_MODE
          EVENT_TEXT=""
          SEND_SOLAR_ON="false"
          SEND_SOLAR_OFF="false"
          EVER_LOW_BATT_NEW=$EVER_LOW_BATT

          if [ "$SOC" -le 25 ]; then
            EVENT_TEXT="Low_Batt"
            NEW_MODE="low_batt"
            EVER_LOW_BATT_NEW="true"
            SEND_SOLAR_OFF="true"
          elif [ "$EVER_LOW_BATT" = "true" ] && [ "$SOC" -lt 35 ]; then
            EVENT_TEXT="Low_Batt"
          else
            EVENT_TEXT="Normal_Batt"
            NEW_MODE="normal"
            if [ "$SOLAR_ON_SENT" = "false" ]; then
              SEND_SOLAR_ON="true"
            fi
          fi

          echo "mode=$NEW_MODE" >> $GITHUB_OUTPUT
          echo "event_text=$EVENT_TEXT" >> $GITHUB_OUTPUT
          echo "send_solar_on=$SEND_SOLAR_ON" >> $GITHUB_OUTPUT
          echo "send_solar_off=$SEND_SOLAR_OFF" >> $GITHUB_OUTPUT
          echo "skip_sheet1=false" >> $GITHUB_OUTPUT
          echo "ever_low_batt=$EVER_LOW_BATT_NEW" >> $GITHUB_OUTPUT

      - name: ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Sheet 1
        if: steps.check_mode.outputs.skip_sheet1 != 'true'
        env:
          SOC: ${{ github.event.client_payload.soc }}
          EVENT: ${{ steps.check_mode.outputs.event_text }}
        run: |
          curl -X POST "https://docs.google.com/forms/d/e/1FAIpQLSdrDVFEEkkdZ6k4rdG4OCkTWoek9GBk1Uip-GWWDZR8HCsXkQ/formResponse" \
            -d "entry.747932621=$SOC" \
            -d "entry.1561980421=$EVENT" \
            --fail --silent --show-error

      - name: ‡∏™‡πà‡∏á solar_on ‡πÑ‡∏õ Sheet 2
        if: steps.check_mode.outputs.send_solar_on == 'true'
        run: |
          curl -X POST "https://docs.google.com/forms/d/e/1FAIpQLSchglVNdUfC_titEV191XeR_uH9NnVYyMMmtuoZmgM0oH3yVg/formResponse" \
            -d "entry.29631913=solar_on" \
            --fail --silent --show-error

      - name: ‡∏™‡πà‡∏á solar_off ‡πÑ‡∏õ Sheet 3
        if: steps.check_mode.outputs.send_solar_off == 'true'
        run: |
          curl -X POST "https://docs.google.com/forms/d/e/1FAIpQLSfR4GihZk5nhFnJndejNVNji_5Mywbg3PIgZi3m3ZjQxGApQQ/formResponse" \
            -d "entry.1012650439=solar_off" \
            --fail --silent --show-error

      - name: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        env:
          NEW_MODE: ${{ steps.check_mode.outputs.mode }}
          SEND_SOLAR_ON: ${{ steps.check_mode.outputs.send_solar_on }}
          SEND_SOLAR_OFF: ${{ steps.check_mode.outputs.send_solar_off }}
          SOLAR_ON_SENT_OLD: ${{ steps.read_state.outputs.solar_on_sent }}
          SOLAR_OFF_SENT_OLD: ${{ steps.read_state.outputs.solar_off_sent }}
          SOC: ${{ github.event.client_payload.soc }}
          EVER_LOW_BATT: ${{ steps.check_mode.outputs.ever_low_batt }}
        run: |
          if [ "$SEND_SOLAR_ON" = "true" ]; then
            SOLAR_ON_SENT="true"
            SOLAR_OFF_SENT="false"
          elif [ "$SEND_SOLAR_OFF" = "true" ]; then
            SOLAR_ON_SENT="false"
            SOLAR_OFF_SENT="true"
          else
            SOLAR_ON_SENT="$SOLAR_ON_SENT_OLD"
            SOLAR_OFF_SENT="$SOLAR_OFF_SENT_OLD"
          fi

          echo "mode=$NEW_MODE" > solar_state.txt
          echo "solar_on_sent=$SOLAR_ON_SENT" >> solar_state.txt
          echo "solar_off_sent=$SOLAR_OFF_SENT" >> solar_state.txt
          echo "last_soc=$SOC" >> solar_state.txt
          echo "ever_low_batt=$EVER_LOW_BATT" >> solar_state.txt

      - name: Commit & Push
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add solar_state.txt
          git diff --quiet && git diff --staged --quiet || git commit -m "Update solar_state.txt"
          git remote set-url origin https://${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
          git push
          echo "‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞ push ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"

